{"version":3,"sources":["List.js","App.js","index.js"],"names":["List","props","itemStyles","paddingBottom","paddingLeft","paddingTop","border","marginLeft","marginRight","background","buttonStyles","position","right","style","textAlign","width","borderRadius","listStyle","transition","listStyleType","list","map","i","key","id","name","description","onClick","resolveBug","App","state","newBug","Math","random","handleName","bind","handleDescription","handleTrack","localStorage","setItem","JSON","stringify","this","data","getItem","console","log","setState","parse","event","target","value","alert","refs","updatedList","filter","item","padding","height","boxShadow","boxSizing","fontFamily","overflowWrap","marginTop","type","placeholder","ref","onChange","rows","cols","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.19f6e64c.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default function List(props) {\r\n    const listStyles = {\r\n        textAlign: \"left\",\r\n        paddingBottom: \"5px\",\r\n        paddingTop: \"5px\",\r\n        width: \"80%\",\r\n        border: \"1px solid black\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        borderRadius: \"10px\",\r\n        listStyle: \"none\",\r\n        background: \"white\",\r\n        transition: \"all 0.5s ease-in-out\",\r\n    }\r\n    const itemStyles = {\r\n        paddingBottom: \"15px\",\r\n        paddingLeft: \"10px\",\r\n        paddingTop: \"10px\",\r\n        border: \"1px solid black\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        background: \"khaki\",\r\n    }\r\n    const buttonStyles = {\r\n        position: \"relative\",\r\n        right: \"5px\"\r\n    }\r\n    const listStyleType = {\r\n        listStyleType: \"none\",\r\n        marginRight: \"auto\",\r\n        marginLeft: \"0px\",\r\n        position: \"relative\",\r\n        right: \"20px\",\r\n        \r\n    }\r\n    return (\r\n        <div style={listStyles}>\r\n            <ul style={listStyleType}>\r\n                {props.list.map(i => {\r\n                    return (\r\n                        <li style={itemStyles} key={i.id}>\r\n                            {i.name}\r\n                            <ul>\r\n                                <li key={i.id}>\r\n                                    {i.description}\r\n                                </li>\r\n                                <button onClick={() => props.resolveBug(i.id)} style={buttonStyles}>Resolve Bug</button>\r\n                            </ul>\r\n                        </li>\r\n                    )\r\n                })}\r\n            </ul>\r\n        </div>\r\n    )\r\n}","import React from 'react';\nimport List from './List';\n\nclass App extends React.Component {\n  // boilerplate stuff\n  constructor(props) {\n    super(props);\n    this.state = {\n      newBug: {\n        name: \"\",\n        description: \"\",\n        id: 1 + Math.random()\n      },\n      list: []\n    }\n    this.handleName = this.handleName.bind(this);\n    this.handleDescription = this.handleDescription.bind(this);\n    this.handleTrack = this.handleTrack.bind(this);\n    this.resolveBug = this.resolveBug.bind(this);\n  }\n  componentDidUpdate() {\n    localStorage.setItem('bug-tracker', JSON.stringify(this.state.list))\n  }\n  componentWillMount() {\n    const data = localStorage.getItem('bug-tracker');\n    console.log(data)\n    if(data) {\n      this.setState({\n        list: JSON.parse(data)\n      })\n    }\n  }\n  // Triggers whenever bug name is edited. Updates bug name in the state.\n  handleName(event) {\n    this.setState ({\n      newBug: {\n        name: event.target.value,\n        description: this.state.newBug.description,\n        id: this.state.newBug.id\n      }\n    })\n  }\n  // Triggers whenever bug name is edited. Updates bug name in the state.\n  handleDescription(event) {\n    this.setState ({\n      newBug: {\n        name: this.state.newBug.name,\n        description: event.target.value,\n        id: this.state.newBug.id\n      }\n    })\n  }\n  // Triggers when track bug is clicked. Appends a new bug to the list array in the state.\n  handleTrack() {\n    if (this.state.newBug.name === \"\") {\n      alert(\"You can't track a bug without a name. Enter one now.\")\n    } else {\n    this.setState ({\n      list: [...this.state.list, this.state.newBug],\n      newBug: {\n        name: \"\",\n        description: \"\",\n        id: 1 + Math.random()\n      }\n    })\n    this.refs.name.value = \"\"\n    this.refs.description.value = \"\"\n  }\n  }\n  // Triggers whenever resolve bug button is pressed. Removes a bug from the list.\n  resolveBug(id) {\n    const list = [...this.state.list];\n    const updatedList = list.filter(item => item.id !== id);\n\n    this.setState ({\n      list: updatedList\n    });\n  }\n  render() {\n    const defaultStyles = {\n      textAlign: \"center\",\n      padding: \"0\",\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n      background: \"lightblue\",\n      width: \"90vw\",\n      height: \"auto\",\n      boxShadow: \"0px 0px 10px 5px #888888\",\n      boxSizing: \"border-box\",\n      fontFamily: \"Arial, Helvetica, sans-serif\",\n      overflowWrap: \"break-word\",\n      transition: \"all .5s ease\",\n      marginTop: \"10px\"\n    }\n    const h1Styles = {\n      paddingTop: \"20px\"\n    }\n    const textAreaStyles = {\n      fontFamily: \"Arial, Helvetica, sans-serif\"\n    }\n    return (\n      <div style={defaultStyles}>\n      <h1 style={h1Styles}>Bug Tracker</h1>\n      <input type=\"text\" placeholder=\"Bug Name\" ref=\"name\" onChange={this.handleName} />\n      <br/>\n      <textarea style={textAreaStyles} fontFamily=\"Arial, Helvetica, sans-serif\" placeholder=\"Bug Description\" rows=\"3\" cols=\"30\" ref=\"description\" onChange={this.handleDescription}/>\n      <br/>\n      <button onClick={this.handleTrack}>Track Bug</button>\n      <br/>\n      <br/>\n      <List resolveBug={this.resolveBug} list={this.state.list}/>\n      <br/>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}