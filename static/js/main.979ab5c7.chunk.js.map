{"version":3,"sources":["List.js","App.js","index.js"],"names":["List","props","itemStyles","paddingBottom","buttonStyles","style","textAlign","paddingLeft","width","list","map","i","key","id","name","description","onClick","resolveBug","App","state","newBug","Math","random","handleName","bind","handleDescription","handleTrack","localStorage","setItem","JSON","stringify","this","data","getItem","console","log","setState","parse","event","target","value","refs","updatedList","filter","item","padding","marginLeft","marginRight","background","height","boxShadow","boxSizing","fontFamily","paddingTop","type","placeholder","ref","onChange","rows","cols","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sMAEe,SAASA,EAAKC,GACzB,IAMMC,EAAa,CACfC,cAAe,QAEbC,EAAe,GAErB,OACI,yBAAKC,MAZU,CACfC,UAAW,OACXC,YAAa,MACbJ,cAAe,OACfK,MAAO,SASH,4BACKP,EAAMQ,KAAKC,KAAI,SAAAC,GACZ,OACI,wBAAIN,MAAOH,EAAYU,IAAKD,EAAEE,IACzBF,EAAEG,KACH,4BACI,wBAAIF,IAAKD,EAAEE,IACNF,EAAEI,aAEP,4BAAQC,QAAS,kBAAMf,EAAMgB,WAAWN,EAAEE,KAAKR,MAAOD,GAAtD,sB,ICuFjBc,E,kDA3Gb,WAAYjB,GAAQ,IAAD,8BACjB,cAAMA,IACDkB,MAAQ,CACXC,OAAQ,CACNN,KAAM,GACNC,YAAa,GACbF,GAAI,EAAIQ,KAAKC,UAEfb,KAAM,IAER,EAAKc,WAAa,EAAKA,WAAWC,KAAhB,gBAClB,EAAKC,kBAAoB,EAAKA,kBAAkBD,KAAvB,gBACzB,EAAKE,YAAc,EAAKA,YAAYF,KAAjB,gBACnB,EAAKP,WAAa,EAAKA,WAAWO,KAAhB,gBAbD,E,iEAgBjBG,aAAaC,QAAQ,cAAeC,KAAKC,UAAUC,KAAKZ,MAAMV,S,2CAG9D,IAAMuB,EAAOL,aAAaM,QAAQ,eAClCC,QAAQC,IAAIH,GACTA,GACDD,KAAKK,SAAS,CACZ3B,KAAMoB,KAAKQ,MAAML,O,iCAKZM,GACTP,KAAKK,SAAU,CACbhB,OAAQ,CACNN,KAAMwB,EAAMC,OAAOC,MACnBzB,YAAagB,KAAKZ,MAAMC,OAAOL,YAC/BF,GAAIkB,KAAKZ,MAAMC,OAAOP,Q,wCAKVyB,GAChBP,KAAKK,SAAU,CACbhB,OAAQ,CACNN,KAAMiB,KAAKZ,MAAMC,OAAON,KACxBC,YAAauB,EAAMC,OAAOC,MAC1B3B,GAAIkB,KAAKZ,MAAMC,OAAOP,Q,oCAMK,KAA3BkB,KAAKZ,MAAMC,OAAON,OAGtBiB,KAAKK,SAAU,CACb3B,KAAK,GAAD,mBAAMsB,KAAKZ,MAAMV,MAAjB,CAAuBsB,KAAKZ,MAAMC,SACtCA,OAAQ,CACNN,KAAM,GACNC,YAAa,GACbF,GAAI,EAAIQ,KAAKC,YAGjBS,KAAKU,KAAK3B,KAAK0B,MAAQ,GACvBT,KAAKU,KAAK1B,YAAYyB,MAAQ,M,iCAIrB3B,GACT,IACM6B,EADI,YAAOX,KAAKZ,MAAMV,MACHkC,QAAO,SAAAC,GAAI,OAAIA,EAAK/B,KAAOA,KAEpDkB,KAAKK,SAAU,CACb3B,KAAMiC,M,+BAsBR,OACE,yBAAKrC,MAnBe,CACpBC,UAAW,SACXuC,QAAS,IACTC,WAAY,OACZC,YAAa,OACbC,WAAY,YACZxC,MAAO,OACPyC,OAAQ,OACRC,UAAW,2BACXC,UAAW,aACXC,WAAY,iCAUZ,wBAAI/C,MARW,CACfgD,WAAY,SAOZ,eACA,2BAAOC,KAAK,OAAOC,YAAY,WAAWC,IAAI,OAAOC,SAAU1B,KAAKR,aACpE,6BACA,8BAAUlB,MARW,CACrB+C,WAAY,gCAOqBA,WAAW,+BAA+BG,YAAY,kBAAkBG,KAAK,IAAIC,KAAK,KAAKH,IAAI,cAAcC,SAAU1B,KAAKN,oBAC7J,6BACA,4BAAQT,QAASe,KAAKL,aAAtB,aACA,6BACA,kBAAC1B,EAAD,CAAMiB,WAAYc,KAAKd,WAAYR,KAAMsB,KAAKZ,MAAMV,Y,GAvGxCmD,IAAMC,WCCxBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.979ab5c7.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default function List(props) {\r\n    const listStyles = {\r\n        textAlign: \"left\",\r\n        paddingLeft: \"5px\",\r\n        paddingBottom: \"10px\",\r\n        width: \"100%\"\r\n    }\r\n    const itemStyles = {\r\n        paddingBottom: \"10px\"\r\n    }\r\n    const buttonStyles = {\r\n    }\r\n    return (\r\n        <div style={listStyles}>\r\n            <ul>\r\n                {props.list.map(i => {\r\n                    return (\r\n                        <li style={itemStyles} key={i.id}>\r\n                            {i.name}\r\n                            <ul>\r\n                                <li key={i.id}>\r\n                                    {i.description}\r\n                                </li>\r\n                                <button onClick={() => props.resolveBug(i.id)} style={buttonStyles}>Resolve Bug</button>\r\n                            </ul>\r\n                        </li>\r\n                    )\r\n                })}\r\n            </ul>\r\n        </div>\r\n    )\r\n}","import React from 'react';\nimport List from './List';\n\nclass App extends React.Component {\n  // boilerplate stuff\n  constructor(props) {\n    super(props);\n    this.state = {\n      newBug: {\n        name: \"\",\n        description: \"\",\n        id: 1 + Math.random()\n      },\n      list: []\n    }\n    this.handleName = this.handleName.bind(this);\n    this.handleDescription = this.handleDescription.bind(this);\n    this.handleTrack = this.handleTrack.bind(this);\n    this.resolveBug = this.resolveBug.bind(this);\n  }\n  componentDidUpdate() {\n    localStorage.setItem('bug-tracker', JSON.stringify(this.state.list))\n  }\n  componentWillMount() {\n    const data = localStorage.getItem('bug-tracker');\n    console.log(data)\n    if(data) {\n      this.setState({\n        list: JSON.parse(data)\n      })\n    }\n  }\n  // Triggers whenever bug name is edited. Updates bug name in the state.\n  handleName(event) {\n    this.setState ({\n      newBug: {\n        name: event.target.value,\n        description: this.state.newBug.description,\n        id: this.state.newBug.id\n      }\n    })\n  }\n  // Triggers whenever bug name is edited. Updates bug name in the state.\n  handleDescription(event) {\n    this.setState ({\n      newBug: {\n        name: this.state.newBug.name,\n        description: event.target.value,\n        id: this.state.newBug.id\n      }\n    })\n  }\n  // Triggers when track bug is clicked. Appends a new bug to the list array in the state.\n  handleTrack() {\n    if (this.state.newBug.name === \"\") {\n\n    } else {\n    this.setState ({\n      list: [...this.state.list, this.state.newBug],\n      newBug: {\n        name: \"\",\n        description: \"\",\n        id: 1 + Math.random()\n      }\n    })\n    this.refs.name.value = \"\"\n    this.refs.description.value = \"\"\n  }\n  }\n  // Triggers whenever resolve bug button is pressed. Removes a bug from the list.\n  resolveBug(id) {\n    const list = [...this.state.list];\n    const updatedList = list.filter(item => item.id !== id);\n\n    this.setState ({\n      list: updatedList\n    });\n  }\n  render() {\n    const defaultStyles = {\n      textAlign: \"center\",\n      padding: \"0\",\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n      background: \"lightblue\",\n      width: \"90vw\",\n      height: \"auto\",\n      boxShadow: \"0px 0px 10px 5px #888888\",\n      boxSizing: \"border-box\",\n      fontFamily: \"Arial, Helvetica, sans-serif\"\n    }\n    const h1Styles = {\n      paddingTop: \"20px\"\n    }\n    const textAreaStyles = {\n      fontFamily: \"Arial, Helvetica, sans-serif\"\n    }\n    return (\n      <div style={defaultStyles}>\n      <h1 style={h1Styles}>Bug Tracker</h1>\n      <input type=\"text\" placeholder=\"Bug Name\" ref=\"name\" onChange={this.handleName} />\n      <br/>\n      <textarea style={textAreaStyles} fontFamily=\"Arial, Helvetica, sans-serif\" placeholder=\"Bug Description\" rows=\"3\" cols=\"30\" ref=\"description\" onChange={this.handleDescription}/>\n      <br/>\n      <button onClick={this.handleTrack}>Track Bug</button>\n      <br/>\n      <List resolveBug={this.resolveBug} list={this.state.list}/>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}